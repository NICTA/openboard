# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-29 04:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('widget_def', '0074_auto_20160915_1429'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='widgetview',
            options={'ordering': ['parent__label', 'sort_order']},
        ),
        migrations.AlterField(
            model_name='graphcluster',
            name='graph',
            field=models.ForeignKey(help_text=b'The graph this cluster belongs to.', on_delete=django.db.models.deletion.CASCADE, to='widget_def.GraphDefinition'),
        ),
        migrations.AlterField(
            model_name='graphcluster',
            name='hyperlink',
            field=models.URLField(blank=True, help_text=b'An optional external URL for this cluster to link to.', null=True),
        ),
        migrations.AlterField(
            model_name='graphcluster',
            name='label',
            field=models.CharField(help_text=b'A longer human-readable description of the cluster.', max_length=80, verbose_name=b'name'),
        ),
        migrations.AlterField(
            model_name='graphcluster',
            name='sort_order',
            field=models.IntegerField(help_text=b'How to sort this cluster within the graph.'),
        ),
        migrations.AlterField(
            model_name='graphcluster',
            name='url',
            field=models.SlugField(help_text=b'A short symbolic label for the cluster, as used in the API.', verbose_name=b'label'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='colour',
            field=models.CharField(help_text=b'The colour of the dataset. Interpretation is implementation-specific. Typically a word colour hint rather than an explicit rgb value.', max_length=50),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='dynamic_label',
            field=models.BooleanField(default=False, help_text=b'If false, the name (label) of the dataset is used. If true, this may be over-ridden by a dynamic value supplied with the data for the graph.'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='graph',
            field=models.ForeignKey(help_text=b'The graph the dataset belongs to', on_delete=django.db.models.deletion.CASCADE, to='widget_def.GraphDefinition'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='hyperlink',
            field=models.URLField(blank=True, help_text=b'An optional external URL for this dataset to link to.', null=True),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='label',
            field=models.CharField(help_text=b'A longer human-readable description of the dataset.', max_length=80, verbose_name=b'name'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='sort_order',
            field=models.IntegerField(help_text=b'How to sort this dataset within the graph.'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='url',
            field=models.SlugField(help_text=b'A short symbolic label for the dataset, as used in the API.', verbose_name=b'label'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='use_error_bars',
            field=models.BooleanField(default=False, help_text=b'If true the data for this dataset will be accompanied by an upper and lower uncertainty limit, which may be plotted as error-bars. Not supported for pie charts.'),
        ),
        migrations.AlterField(
            model_name='graphdataset',
            name='use_secondary_numeric_axis',
            field=models.BooleanField(default=False, help_text=b"If true, data for this dataset are plotted against the graph's secondary numeric axis (which obviously must be defined). Not supported for pie charts."),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='cluster_label',
            field=models.CharField(default=b'cluster', help_text=b"An overall heading for clusters.  E.g. if each cluster represents a city, then the cluster_label might be 'City' or 'Cities'. Not used for line graphs.", max_length=120),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='dataset_label',
            field=models.CharField(default=b'dataset', help_text=b"An overall heading for datasets.  E.g. if each dataset represents a city, then the dataset_label might be 'City' or 'Cities'. Not used for line graphs.", max_length=120),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='dynamic_clusters',
            field=models.BooleanField(default=False, help_text=b'If true, clusters are not defined statically, but created at load time and provided to clients as part of the widget data.'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='graph_type',
            field=models.SmallIntegerField(choices=[(1, b'line'), (2, b'histogram'), (3, b'bar'), (4, b'pie')], help_text=b'The type of graph'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='heading',
            field=models.CharField(blank=True, help_text=b'The heading for the graph, as displayed to the end-user.', max_length=120, null=True),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='horiz_axis_label',
            field=models.CharField(blank=True, help_text=b'The label for the horizontal axis. For line graphs only.', max_length=120, null=True),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='horiz_axis_type',
            field=models.SmallIntegerField(choices=[(0, b'-'), (1, b'numeric'), (2, b'date'), (3, b'time'), (4, b'datetime')], default=0, help_text=b'The data-type for the horizontal axis. For line graphs only.'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='numeric_axis_always_show_zero',
            field=models.BooleanField(default=True, help_text=b'If true, the main numeric axis zero point should always be displayed on the graph. If false, the zero point may be hidden to focus on the actual value range the data covers. If the data crosses the zero point, then the zero point will be displayed either way. For line, bar and histogram graphs.'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='numeric_axis_label',
            field=models.CharField(blank=True, help_text=b"A descriptive name for the (main) numeric axis, suitable for displaying to the end-user (as an axis label).  For line, bar and histogram type graphs.  For line-graphs the 'numeric axis' is the vertical axis, even if the horizontal axis is numeric as well.", max_length=120, null=True, verbose_name=b'Numeric axis name'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='secondary_numeric_axis_always_show_zero',
            field=models.BooleanField(default=True, help_text=b'If true, the secondary numeric axis zero point should always be displayed on the graph. If false, the zero point may be hidden to focus on the actual value range the data covers. If the data crosses the zero point, then the zero point will be displayed either way. For line, bar and histogram graphs that use a secondary numeric axis.'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='secondary_numeric_axis_label',
            field=models.CharField(blank=True, help_text=b'A descriptive name for the secondary numeric axis, suitable for displaying to the end-user (as an axis label).  For line, bar and histogram type graphs that use a secondary numeric axis.', max_length=120, null=True, verbose_name=b'Secondary numeric axis name'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='tile',
            field=models.OneToOneField(help_text=b'The widget tile this graph is to be displayed in', on_delete=django.db.models.deletion.CASCADE, to='widget_def.TileDefinition'),
        ),
        migrations.AlterField(
            model_name='graphdefinition',
            name='use_secondary_numeric_axis',
            field=models.BooleanField(default=False, help_text=b'If true, there is an independent secondary numeric axis against which datasets can be plotted. For line, bar and histogram graphs.'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='graph',
            field=models.OneToOneField(help_text=b'The graph', on_delete=django.db.models.deletion.CASCADE, to='widget_def.GraphDefinition'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='lines',
            field=models.SmallIntegerField(choices=[(0, b'none'), (1, b'straight'), (2, b'bezier')], default=0, help_text=b'For line graphs, how to display the lines between datapoints.'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='point_colour_map',
            field=models.ForeignKey(blank=True, help_text=b'Indicates how points should be coloured, based on their vertical axis value.  Optional.  If null, then use the colours in the Graph Dataset Definition.  N.B. Must be null if "points" is "none".', null=True, on_delete=django.db.models.deletion.CASCADE, to='widget_def.PointColourMap'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='points',
            field=models.SmallIntegerField(choices=[(0, b'none'), (1, b'circle'), (2, b'square'), (3, b'triangle'), (4, b'vertical-bars')], default=0, help_text=b'For line graphs, how to display the datapoints.'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='rotates',
            field=models.BooleanField(default=False, help_text=b'Can only be true if single graph is false.  Rather than a set of graphs being displayed, a single graph is at a time, but the various graphs are gradually rotated through. Not supported for pie charts.'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='shaded',
            field=models.BooleanField(default=False, help_text=b'For line graphs only. If true, the area under the line is to be shaded. Cannot be set if lines=none.'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='single_graph',
            field=models.BooleanField(default=True, help_text=b'If false a line graph with multiple datasets is to be displayed as a set of single dataset graphs and a bar chart or histogram is displayed as a set of separate histograms instead of a single clustered histogram. Not supported for pie charts.'),
        ),
        migrations.AlterField(
            model_name='graphdisplayoptions',
            name='stacked',
            field=models.BooleanField(default=False, help_text=b'For bar or histogram charts only. If true they are displayed as a stacked histogram instead of a clustered histogram.  (i.e. the bars for each cluster are stacked on top of each other instead of being placed side by side)'),
        ),
        migrations.AlterField(
            model_name='pointcolourmap',
            name='decimal_places',
            field=models.SmallIntegerField(default=0, help_text=b'Numeric precision of data-range values for this map. Good for it to match the numeric_axis type of the graph, but not required.'),
        ),
        migrations.AlterField(
            model_name='pointcolourmap',
            name='label',
            field=models.CharField(help_text=b'A label to identify this colour map to support re-use.', max_length=50, unique=True, verbose_name=b'name'),
        ),
        migrations.AlterField(
            model_name='pointcolourrange',
            name='colour',
            field=models.CharField(help_text=b'The colour. Format is implementation specific. May be e.g. a hex code, or may simply be a word colour-hint.', max_length=50),
        ),
        migrations.AlterField(
            model_name='pointcolourrange',
            name='colour_map',
            field=models.ForeignKey(help_text=b'The PointColourMap object', on_delete=django.db.models.deletion.CASCADE, to='widget_def.PointColourMap'),
        ),
        migrations.AlterField(
            model_name='pointcolourrange',
            name='min_value_dec',
            field=models.DecimalField(blank=True, decimal_places=4, help_text=b'The minimum value for this colour range, used if PointColourMap.decimal_places != 0.', max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='widgetview',
            name='requires_authentication',
            field=models.BooleanField(default=False, help_text=b'If true then authentication is required to access this view. Note that authentication is not supported across externally hosted WidgetViews.'),
        ),
    ]
